# ********************
# GENERIC MAKEFILE FOR MOST BENCHMARKS THAT INCLUDE THE IMPLEMENTATION
# INTO THE TIMING CODE AS AN INCLUDE FILE
#    BNCHMRK : the name of the benchmark
#    GLOBAL_REQUIRE : implementation files needed from global common
#    BENCH_REQUIRE : implementation files needed from benchmark common
#    LOCAL_REQUIRE : local implementation files
#    INCLUDE : implementation include file
#    TIME_GLOBAL_REQUIRE : timing files needed from global common
#    TIME_REQUIRE : timing files needed from benchmark common
#    PCC : the compiler
#    PCFLAGS : compiler flags
#    PLFLAGS : compiler link flags
# ********************

CHECK = $(BNCHMRK)Check
TIME = $(BNCHMRK)Time
TASK = $(BNCHMRK)Task
TEST_FILES = testInputs

# Make the benchmark, and make the output check code in the common directory
all : $(BNCHMRK) $(TASK) $(TASK)Util $(TEST_FILES)
	cd ../common; make -s $(CHECK)

$(TEST_FILES) :
	cp ../common/$@ .

# Files copied from toplevel common directory
# The sort used to remove duplicates
GLOBAL = $(sort $(TIME_GLOBAL_REQUIRE) $(GLOBAL_REQUIRE))

$(GLOBAL) :
	ln -s ../../common/$@ .

# Files copied from benchmark common directory
BENCH = $(TIME).C $(sort $(TIME_REQUIRE) $(BENCH_REQUIRE))

$(BENCH) :
	ln -s ../common/$@ .

# Make all implementation objects
%.o : %.C $(GLOBAL_REQUIRE) $(BENCH_REQUIRE) $(LOCAL_REQUIRE)
	$(PCC) $(PCFLAGS) -c $< -o $@

# Make timing code object file
$(TIME).o : $(BENCH) $(GLOBAL) $(INCLUDE) $(LOCAL_REQUIRE)
	$(PCC) $(PCFLAGS) -include $(INCLUDE) -c $< -o $@

# Make benchmark
$(BNCHMRK) : $(TIME).o 
	$(PCC) $(PLFLAGS) -o $@ $(TIME).o

$(TASK).o : $(TASK).C $(BENCH) $(GLOBAL) $(INCLUDE) $(LOCAL_REQUIRE)
	$(PCC) $(PCFLAGS) -include $(INCLUDE) -c $< -o $@

$(TASK) : $(TASK).o
	$(PCC) $(PLFLAGS) -L ../../../runtime -lrt -lm -lclustering -o $@ $(TASK).o ../../../runtime/task_manager.o ../../../runtime/single_use_barrier.o ../../../runtime/timespec_functions.o -Wl,-rpath,$(HOME)/cilkplus-install/lib64

$(TASK)Util : $(TASK).o
	$(PCC) $(PLFLAGS) -L ../../../runtime -lrt -lm -lclustering -o $@ $(TASK).o ../../../runtime/utilization_calculator.o ../../../runtime/single_use_barrier.o ../../../runtime/timespec_functions.o -Wl,-rpath,$(HOME)/cilkplus-install/lib64

clean :
	rm -f $(BNCHMRK) $(TASK) $(TASK)Util *.o *.pyc

cleansrc :
	make -s clean
	rm -f $(GLOBAL) $(BENCH) $(TEST_FILES)

